//流体計算
//壁なしバージョン
#include "HSPFLUID64.as"
	buffer 1:picload "back01.png"

	wx=10
	wy=10
	scale=40
	
	ddim vx,wx,wy//x速度
	ddim vy,wx,wy//y速度
	ddim p,wx,wy//圧力
	dim wall,wx,wy//そこが壁かどうか

	pnum=500//粒子の数
	ddim particle_x,pnum//粒子の座標
	ddim particle_y,pnum//粒子の座標
	ddim speed_x,pnum//粒子の速度
	ddim speed_y,pnum//粒子の速度
	
	screen 0,wx*scale,wy*scale
	timer=0
	
*main
	pos 0,0
	gmode 3,0,0,30
	gcopy 1,0,0,wx*scale,wy*scale
	
	vx.5.5=cos(0.06*timer+1.57)*0.4//速度つける
	
	FluidProcess vx,vy,p,wall//流体計算
	GetSpeedPoints vx,vy,particle_x,particle_y,speed_x,speed_y//粒子の速度計算

		//渦度描画
		repeat wx
		x=cnt
		x1=(x+1)\wx
			repeat wy
			y=cnt
			y1=(y+1)\wy
			vor=-vx.x1.y1+vy.x1.y1+vx.x1.y -vy.x .y1//渦度
			rcol=limit(vor*1256.0,0,255)
			gcol=limit(-vor*1256.0,0,255)
			bcol=limit(abs(vor)*1156.0-40.0,0,255)
			color rcol,gcol,bcol
			boxf x*scale,y*scale,x*scale+scale,y*scale+scale
			loop
		loop
			
	color 255,255,255
	gosub*Particle_set
		repeat pnum
		particle_x.cnt+=speed_x.cnt
		particle_y.cnt+=speed_y.cnt
		pset particle_x.cnt*scale,particle_y.cnt*scale
		loop
	redraw 1
	redraw 0
	await 16
	timer++
	goto*main


*Particle_set//順繰りに初期化
		repeat 4
		index=(index+1)\pnum
		particle_x.index=5.0
		particle_y.index=0.0001*rnd(20000)+4.5
		loop
	return