//流体計算
//ノイマン境界バージョン
#include "HSPFLUID64.as"
#include "hsp3util.as"
	buffer 1:picload "back03.png"

	wx = 12
	wy = 12
	scale = 40
	
	ddim vx,wx,wy//x速度
	ddim vy,wx,wy//y速度
	ddim p,wx,wy//圧力
	dim wall,wx,wy//そこが壁かどうか

	pnum = 600//粒子の数
	ddim particle_x,pnum//粒子の座標
	ddim particle_y,pnum//粒子の座標
	ddim speed_x,pnum//粒子の速度
	ddim speed_y,pnum//粒子の速度
	
	screen 0,wx*scale,wy*scale
	timer = 0
	font msgothic,30

*main
	pos 0,0
	gmode 3,0,0,20
	gcopy 1,0,0,wx*scale,wy*scale
	
	FluidProcess vx,vy,p,wall//流体計算
	
	gsel 1
		repeat wx
		xcnt=cnt
			repeat wy
			rcol=limit(p.xcnt.cnt*6.0,0,255)
			gcol=limit(p.xcnt.cnt*1.9,0,255)
			color 255,255-gcol,255-rcol
			boxf xcnt*scale+2,cnt*scale+2,xcnt*scale+scale-4,cnt*scale+scale-4
			loop
		loop
	gsel 0

	GetSpeedPoints vx,vy,particle_x,particle_y,speed_x,speed_y//粒子の速度計算

	color 0,0,0
	gosub*Particle_set
		repeat pnum
		particle_x.cnt+=speed_x.cnt
		particle_y.cnt+=speed_y.cnt
		if (particle_x.cnt<0):particle_x.cnt+=wx
		if (particle_y.cnt<0):particle_y.cnt+=wy
		if (particle_x.cnt>1.0*wx):particle_x.cnt-=wx
		if (particle_y.cnt>1.0*wy):particle_y.cnt-=wy
		pset particle_x.cnt*scale,particle_y.cnt*scale
		loop

	gosub*demo
	
	redraw 1
	redraw 0
	await 16
	timer++
	goto*main


*Particle_set//順繰りに初期化
		repeat 5
		index=(index+1)\pnum
		particle_x.index=0.0001*rnd(10000)+3.0
		particle_y.index=0.0001*rnd(10000)+4.0
		loop
	return
	


*demo
	color 255,255,255
	grect wx*scale/2,wy*scale/2,0,wx*scale,wy*scale
	color 0,0,0
	textmode 2
	color 5,255,135
	eventid=timer/100
	title ""+timer+""

	if (eventid<4){
		pos 10,10
		emes "流体を生み出すマスを\n作りたいとします。"
		return
	}

	if (eventid<10){
		pos 10,10
		emes "wall.3.4 = 1\nvx.3.4 = -0.25\nvx.4.4 = 0.25\nvy.3.4 = -0.25\nvy.3.5 = 0.25"
		//壁設定
		wall.3.4 = 1
		vx.3.4 = -0.25
		vx.4.4 = 0.25
		vy.3.4 = -0.25
		vy.3.5 = 0.25
		//	wall.7.7 = 2//2はノイマン境界。この場合吸収の役割を担う
		if (eventid>5){
			emes "\n\nこうすると圧力の逃げ場\nがないのでどんどん\n圧力が高くなってしま\nいます。\nそこで・・・"
		}
		
		setlineX 3,4
		setlineX 4,4
		setlineY 3,4
		setlineY 3,5
		return
	}
	
	if (eventid<27){
		pos 10,10
		emes "wall.7.7 = 2"
		//壁設定
		wall.7.7 = 2
		p.7.7 = 0.0
		if (eventid>=10)&(eventid<13){
			emes "圧力の逃げ場を用意します"
		}
		
		if (eventid>=13)&(eventid<19){
			emes "wallに2を設定すると\nその周りの辺がノイマン境界\nというのになります。"
			setlineX 7,7
			setlineX 8,7
			setlineY 7,7
			setlineY 7,8
		}
		if (eventid>=19){
			emes "境界領域では\n速度の微分が0になるという\n特徴があります。\n\n\難しいですが圧力の逃げ場\nとおぼえておけば十分です。"
			setlineX 7,7
			setlineX 8,7
			setlineY 7,7
			setlineY 7,8
		}
		return
	}

	
	if eventid=30:end
	return


#module

#deffunc setlineX int x,int y
	color 250/2,150/2,110/2
	boxf x*scale@-5,y*scale@,x*scale@+5,y*scale@+scale@
	return

#deffunc setlineY int x,int y
	color 110/2,110/2,250/2
	boxf x*scale@,y*scale@-5,x*scale@+scale@,y*scale@+5
	return


#deffunc SetBox int x,int y
	gsel 1
	color 100,100,100
	boxf x*scale@+2,y*scale@+2,x*scale@+scale@-3,y*scale@+scale@-3
	gsel 0
	return

#deffunc UnSetBox int x,int y
	gsel 1
	color 255,255,255
	boxf x*scale@+2,y*scale@+2,x*scale@+scale@-3,y*scale@+scale@-3
	gsel 0
	return

#global